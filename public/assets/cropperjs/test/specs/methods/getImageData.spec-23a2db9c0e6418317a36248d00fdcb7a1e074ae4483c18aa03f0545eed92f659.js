describe("getImageData (method)",()=>{it("should get an empty object when it is not loaded",()=>{const e=window.createImage(),t=new Cropper(e).getImageData();expect(t).to.be.an("object").that.is.empty}),it("should get expect image data when loaded",e=>{const t=window.createImage(),a=new Cropper(t,{ready(){const t=a.getImageData();expect(t).to.have.all.keys(["left","top","width","height","rotate","scaleX","scaleY","naturalWidth","naturalHeight","aspectRatio"]),expect(t.left).to.be.a("number"),expect(t.top).to.be.a("number"),expect(t.width).to.be.a("number"),expect(t.height).to.be.a("number"),expect(t.rotate).to.be.a("number"),expect(t.scaleX).to.be.a("number"),expect(t.scaleY).to.be.a("number"),expect(t.naturalWidth).to.be.a("number"),expect(t.naturalHeight).to.be.a("number"),expect(t.aspectRatio).to.be.a("number"),e()}})}),it("should not have the `rotate` property when it is not rotatable",e=>{const t=window.createImage(),a=new Cropper(t,{rotatable:!1,ready(){const t=a.getImageData();expect(t).to.have.all.keys(["left","top","width","height","scaleX","scaleY","naturalWidth","naturalHeight","aspectRatio"]),expect(t.rotate).to.be.undefined,e()}})}),it("should not have the `scaleX` and `scaleY` properties when it is not scalable",e=>{const t=window.createImage(),a=new Cropper(t,{scalable:!1,ready(){const t=a.getImageData();expect(t).to.have.all.keys(["left","top","width","height","rotate","naturalWidth","naturalHeight","aspectRatio"]),expect(t.scaleX).to.be.undefined,expect(t.scaleY).to.be.undefined,e()}})})});