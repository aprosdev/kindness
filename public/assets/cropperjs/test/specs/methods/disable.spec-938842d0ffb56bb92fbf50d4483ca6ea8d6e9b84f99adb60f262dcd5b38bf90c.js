describe("disable (method)",()=>{it("should be disabled after call the method",e=>{const a=window.createImage(),t=new Cropper(a,{ready(){expect(t.disabled).to.be["false"],expect(t.cropper.className).to.not.include("cropper-disabled"),t.disable(),expect(t.disabled).to.be["true"],expect(t.cropper.className).to.include("cropper-disabled"),e()}})}),it("should disable the `crop` method",e=>{const a=window.createImage(),t=new Cropper(a,{autoCrop:!1,ready(){expect(t.cropped).to.be["false"],t.disable().crop(),expect(t.cropped).to.be["false"],e()}})}),it("should disable the `reset` method",e=>{const a=window.createImage(),t=new Cropper(a,{ready(){const a=t.moveTo(0).getCanvasData();t.disable().reset(),expect(t.getCanvasData()).to.deep.equal(a),e()}})}),it("should disable the `clear` method",e=>{const a=window.createImage(),t=new Cropper(a,{ready(){expect(t.cropped).to.be["true"],t.disable().clear(),expect(t.cropped).to.be["true"],e()}})}),it("should disable the `replace` method",e=>{const a=window.createImage(),t=a.src,o=new Cropper(a,{ready(){o.replaced?expect.fail(1,0):(o.disable().replace("/base/docs/images/picture-2.jpg"),expect(a.src).to.equal(t),e())}})}),it("should disable the `move` method",e=>{const a=window.createImage(),t=new Cropper(a,{ready(){const a=t.getCanvasData();t.disable().move(10,10),expect(t.getCanvasData()).to.deep.equal(a),e()}})}),it("should disable the `moveTo` method",e=>{const a=window.createImage(),t=new Cropper(a,{ready(){const a=t.getCanvasData();t.disable().moveTo(0),expect(t.getCanvasData()).to.deep.equal(a),e()}})}),it("should disable the `zoom` method",e=>{const a=window.createImage(),t=new Cropper(a,{ready(){const a=t.getCanvasData();t.disable().zoom(.1),expect(t.getCanvasData()).to.deep.equal(a),e()}})}),it("should disable the `zoomTo` method",e=>{const a=window.createImage(),t=new Cropper(a,{ready(){const a=t.getCanvasData();t.disable().zoomTo(1),expect(t.getCanvasData()).to.deep.equal(a),e()}})}),it("should disable the `rotate` method",e=>{const a=window.createImage(),t=new Cropper(a,{ready(){const a=t.getCanvasData();t.disable().rotate(45),expect(t.getCanvasData()).to.deep.equal(a),e()}})}),it("should disable the `rotateTo` method",e=>{const a=window.createImage(),t=new Cropper(a,{ready(){const a=t.getCanvasData();t.disable().rotateTo(45),expect(t.getCanvasData()).to.deep.equal(a),e()}})}),it("should disable the `scaleX` method",e=>{const a=window.createImage(),t=new Cropper(a,{ready(){const a=t.getCanvasData();t.disable().scaleX(2),expect(t.getCanvasData()).to.deep.equal(a),e()}})}),it("should disable the `scaleY` method",e=>{const a=window.createImage(),t=new Cropper(a,{ready(){const a=t.getCanvasData();t.disable().scaleY(2),expect(t.getCanvasData()).to.deep.equal(a),e()}})}),it("should disable the `scale` method",e=>{const a=window.createImage(),t=new Cropper(a,{ready(){const a=t.getCanvasData();t.disable().scale(2),expect(t.getCanvasData()).to.deep.equal(a),e()}})}),it("should disable the `setData` method",e=>{const a=window.createImage(),t=new Cropper(a,{ready(){const a=t.getData();t.disable().setData({width:160}),expect(t.getData()).to.deep.equal(a),e()}})}),it("should disable the `setCanvasData` method",e=>{const a=window.createImage(),t=new Cropper(a,{ready(){const a=t.getCanvasData();t.disable().setCanvasData({width:160}),expect(t.getCanvasData()).to.deep.equal(a),e()}})}),it("should disable the `setCropBoxData` method",e=>{const a=window.createImage(),t=new Cropper(a,{ready(){const a=t.getCropBoxData();t.disable().setCropBoxData({width:160}),expect(t.getCropBoxData()).to.deep.equal(a),e()}})}),it("should disable the `setAspectRatio` method",e=>{const a=window.createImage(),t=new Cropper(a,{ready(){t.disable().setAspectRatio(.618),expect(t.options.aspectRatio).to.be.NaN,e()}})}),it("should disable the `setDragMode` method",e=>{const a=window.createImage(),t=new Cropper(a,{ready(){const{dragMode:a}=t.options;t.disable().setDragMode("none"),expect(t.options.dragMode).to.equal(a),e()}})}),it("should not disable the `enable` method",e=>{const a=window.createImage(),t=new Cropper(a,{ready(){t.disable().enable(),expect(t.disabled).to.be["false"],e()}})}),it("should not disable the `destroy` method",e=>{const a=window.createImage(),t=new Cropper(a,{ready(){t.disable().destroy(),expect(a.cropper).to.be.undefined,e()}})})});