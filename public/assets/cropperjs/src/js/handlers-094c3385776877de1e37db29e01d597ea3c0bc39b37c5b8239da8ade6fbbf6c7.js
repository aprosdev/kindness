import{ACTION_CROP,ACTION_ZOOM,CLASS_CROP,CLASS_MODAL,DATA_ACTION,DRAG_MODE_CROP,DRAG_MODE_MOVE,DRAG_MODE_NONE,EVENT_CROP_END,EVENT_CROP_MOVE,EVENT_CROP_START,MIN_CONTAINER_WIDTH,MIN_CONTAINER_HEIGHT,REGEXP_ACTIONS}from"./constants";import{addClass,assign,dispatchEvent,forEach,getData,getPointer,hasClass,isNumber,toggleClass}from"./utilities";export default{resize(){const{options:t,container:e,containerData:i}=this,s=Number(t.minContainerWidth)||MIN_CONTAINER_WIDTH,o=Number(t.minContainerHeight)||MIN_CONTAINER_HEIGHT;if(this.disabled||i.width<=s||i.height<=o)return;const n=e.offsetWidth/i.width;if(1!==n||e.offsetHeight!==i.height){let e,i;t.restore&&(e=this.getCanvasData(),i=this.getCropBoxData()),this.render(),t.restore&&(this.setCanvasData(forEach(e,(t,i)=>{e[i]=t*n})),this.setCropBoxData(forEach(i,(t,e)=>{i[e]=t*n})))}},dblclick(){this.disabled||this.options.dragMode===DRAG_MODE_NONE||this.setDragMode(hasClass(this.dragBox,CLASS_CROP)?DRAG_MODE_MOVE:DRAG_MODE_CROP)},wheel(t){const e=Number(this.options.wheelZoomRatio)||.1;let i=1;this.disabled||(t.preventDefault(),this.wheeling||(this.wheeling=!0,setTimeout(()=>{this.wheeling=!1},50),t.deltaY?i=t.deltaY>0?1:-1:t.wheelDelta?i=-t.wheelDelta/120:t.detail&&(i=t.detail>0?1:-1),this.zoom(-i*e,t)))},cropStart(t){const{buttons:e,button:i}=t;if(this.disabled||isNumber(e)&&1!==e||isNumber(i)&&0!==i||t.ctrlKey)return;const{options:s,pointers:o}=this;let n;t.changedTouches?forEach(t.changedTouches,t=>{o[t.identifier]=getPointer(t)}):o[t.pointerId||0]=getPointer(t),n=Object.keys(o).length>1&&s.zoomable&&s.zoomOnTouch?ACTION_ZOOM:getData(t.target,DATA_ACTION),REGEXP_ACTIONS.test(n)&&!1!==dispatchEvent(this.element,EVENT_CROP_START,{originalEvent:t,action:n})&&(t.preventDefault(),this.action=n,this.cropping=!1,n===ACTION_CROP&&(this.cropping=!0,addClass(this.dragBox,CLASS_MODAL)))},cropMove(t){const{action:e}=this;if(this.disabled||!e)return;const{pointers:i}=this;t.preventDefault(),!1!==dispatchEvent(this.element,EVENT_CROP_MOVE,{originalEvent:t,action:e})&&(t.changedTouches?forEach(t.changedTouches,t=>{assign(i[t.identifier]||{},getPointer(t,!0))}):assign(i[t.pointerId||0]||{},getPointer(t,!0)),this.change(t))},cropEnd(t){if(this.disabled)return;const{action:e,pointers:i}=this;t.changedTouches?forEach(t.changedTouches,t=>{delete i[t.identifier]}):delete i[t.pointerId||0],e&&(t.preventDefault(),Object.keys(i).length||(this.action=""),this.cropping&&(this.cropping=!1,toggleClass(this.dragBox,CLASS_MODAL,this.cropped&&this.options.modal)),dispatchEvent(this.element,EVENT_CROP_END,{originalEvent:t,action:e}))}};